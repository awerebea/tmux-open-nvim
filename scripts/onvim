#!/bin/bash

shopt -s nullglob extglob extquote globstar

# Parse line:col from $1
[ "$1" ] || { echo "No file provided for opening" && exit 1; }
FPATH=$(echo "$1" | tr -d '[:space:]')
readarray -td: a < <(printf %s "$FPATH")
[ "${a[0]}" ] || { echo "You must supply a filename" && exit 1; }
FILE=$(realpath "${a[0]}")
[ "$FILE" ] || { echo "Couldn't open file $FILE" && exit 1; }
LINE=${a[1]:-0}
COLUMN=${a[2]:-0}

# Get all panes in current window
# Get their child instances, since the parent will most likely be the shell
NVIM_INSTANCES=$(tmux list-panes -F '#{pane_pid}' | xargs -I % -r pgrep -P % vim)

# Get all nvim listening sockets (default location)
# shellcheck disable=2086
LISTEN_SOCKS=$(ls ${XDG_RUNTIME_DIR:-${TMPDIR}nvim.${USER}}/**/nvim.*.0)

# Match child process with nvim sock, since process is within 
# e.g `/run/user/1000/nvim.1624238.0` -- nvim process is 1624238
for nvim_pid in $NVIM_INSTANCES
do
  for sock in $LISTEN_SOCKS
  do
    if [[ $sock == *$nvim_pid* ]]
    then
      # Open on remote!
      nvim --server "$sock" --remote "$FILE"
      nvim --server "$sock" --remote-send ":call cursor($LINE, $COLUMN)<cr>"
      exit 0
    fi
  done
done
# No remote nvim, so just open in current pane
nvim -c "call cursor($LINE, $COLUMN)" "$FILE"
