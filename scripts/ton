#!/usr/bin/env bash
shopt -s globstar
OIFS=$IFS

CURRENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

source "$CURRENT_DIR/variables.sh"
source "$CURRENT_DIR/helpers.sh"

OPEN_STRATEGY="$(get_tmux_option "$open_strategy" ":e")"
MENU_STYLE="$(get_tmux_option "$menu_style")"
MENU_SELECTED_STYLE="$(get_tmux_option "$menu_selected_style")"

# Check pipe from stdin or parameter
FPATH=${STDIN:-$1}
if [ "$1" ]; then
  FPATH=$1
elif read -r -t 2 STDIN; then
  FPATH=$STDIN
else
  echo "No file provided for opening" && exit 1
fi
FPATH=$(printf '%s' "$FPATH" | tr -d '[:space:]')

# Parse line:col
IFS=':' a=("$FPATH")
IFS=$OIFS
[ "${a[0]}" ] || { echo "You must supply a filename. Found ${a[0]}" && exit 1; }
FILE=$(realpath "${a[0]}")
[ "$FILE" ] || { echo "Couldn't open file ${a[0]}" && exit 1; }
LINE=${a[1]:-0}
COLUMN=${a[2]:-0}

# Get all nvim listening sockets (default location)
readarray -t LISTEN_SOCKS < <(ls "${XDG_RUNTIME_DIR:-${TMPDIR}nvim.${USER}}"/**/nvim.*.0 2>/dev/null)

CURRENT_WINDOW_INDEX=$(tmux display-message -p '#{window_index}')

MENU_ARGS=()
SOCK_COUNT=${#LISTEN_SOCKS[@]}
SOCK_INDEX=1
for sock in "${LISTEN_SOCKS[@]}"; do
  # extract pid from socket path
  server_pid=$(echo "$sock" | cut -d'.' -f2)
  # process id of server's parent, which is the nvim client
  client_pid=$(ps -o ppid= -p "$server_pid" | tr -d ' ')
  # process id of tmux pane that contains the nvim client
  pane_pid=$(ps -o ppid= -p "$client_pid" | tr -d ' ')

  # tmux ids for the nvim client pane
  readarray -d ' ' -t ids < <(tmux list-panes -a -f "#{==:#{pane_pid},$pane_pid}" -F "#{window_index} #{window_name} #{pane_index}")
  window_index=${ids[0]}
  window_name=${ids[1]}
  pane_index=${ids[2]}

  c1="nvim --server $sock --remote-send \"<esc>$OPEN_STRATEGY $FILE<cr>\""
  c2="nvim --server $sock --remote-send \"<esc>:call cursor($LINE, $COLUMN)<cr>\""
  c3="tmux selectw -t $window_index && tmux selectp -t $pane_index"
  remote_open="$c1 && $c2 && $c3"
  if [[ $window_index == "$CURRENT_WINDOW_INDEX" ]] && [[ $SOCK_COUNT == 1 ]]; then
    # we found a nvim running in our window, escape hatch
    eval $remote_open
    exit 0
  else
    # store this nvim instance for selection
    MENU_ARGS+=("$window_name: pane $pane_index" "$SOCK_INDEX" "run '$remote_open'")
  fi
  SOCK_INDEX=$(($SOCK_INDEX + 1))
done

if [[ ${MENU_ARGS[0]} ]]; then
  # open menu for selection
  tmux menu -s "$MENU_STYLE" -H "$MENU_SELECTED_STYLE" -T "tmux-open-nvim: $FILE" "${MENU_ARGS[@]}"
  exit 0
else
  # No remote nvim, so just open in current pane
  tmux send-keys "nvim -c \"call cursor($LINE, $COLUMN)\" $FILE"
  tmux send-keys "C-m"
  exit 0
fi
